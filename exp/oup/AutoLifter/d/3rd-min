Lifting (3rd-min Param0) for tree
	(0): (minimum Param0)
	(1): (access 1 (sort Param0))

Academic license - for non-commercial use only - expires 2021-08-22
Merging for (3rd-min Param0) in Task tree
(ite (<= Param5 Param0) (int Param5) (ite (<= Param4 Param1) (int Param4) (ite (<= Param3 Param0) (int Param0) (ite (<= Param2 Param1) (int Param1) (ite (<= Param3 Param2) (int Param3) (int Param2))))))
	(0): (minimum Param0)
	(1): (minimum Param1)
	(2): (access 1 (sort Param0))
	(3): (access 1 (sort Param1))
	(4): (3rd-min Param0)
	(5): (3rd-min Param1)
Lifting (minimum Param0) for tree

Academic license - for non-commercial use only - expires 2021-08-22
Merging for (minimum Param0) in Task tree
(ite (<= Param0 Param1) (int Param0) (int Param1))
	(0): (minimum Param0)
	(1): (minimum Param1)
Lifting (access 1 (sort Param0)) for tree
	(0): (minimum Param0)

Academic license - for non-commercial use only - expires 2021-08-22
Merging for (access 1 (sort Param0)) in Task tree
(ite (<= Param2 Param1) (int Param2) (ite (<= Param3 Param0) (int Param3) (ite (<= Param0 Param1) (int Param1) (int Param0))))
	(0): (minimum Param0)
	(1): (minimum Param1)
	(2): (access 1 (sort Param0))
	(3): (access 1 (sort Param1))
Success
x0: (3rd-min Param0)
Liftings:
  x1: (minimum Param0)
  x2: (access 1 (sort Param0))
Combinator for tree
  x0: ite (r0<=l1) (r0) (ite (l0<=r1) (l0) (ite (r2<=l1) (l1) (ite (l2<=r1) (r1) (ite (r2<=l2) (r2) (l2)))))
  x1: ite (l1<=r1) (l1) (r1)
  x2: ite (l2<=r1) (l2) (ite (r2<=l1) (r2) (ite (l1<=r1) (r1) (l1)))
|               |   external |    lifting |   #lifting |      #turn |
|        3rd-min|   0.860051 |    1.03049 |          3 |         74 |
Total time cost: 1.89055
