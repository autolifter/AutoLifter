Lifting (msp Param0) for tree
	(0): (maximum (scanl * Param0))
	(1): (maximum (scanr * Param0))
	(2): (minimum (scanl * Param0))
	(3): (minimum (scanr * Param0))

Academic license - for non-commercial use only - expires 2021-08-22
Merging for (msp Param0) in Task tree
(ite (and (and (<= (* Param1 Param2) Param9) (<= (* Param5 Param6) Param9)) (< Param8 Param9)) (int Param9) (ite (and (<= (* Param1 Param2) Param8) (< (* Param5 Param6) Param8)) (int Param8) (ite (<= (* Param1 Param2) (* Param5 Param6)) (* (int Param5) (int Param6)) (* (int Param1) (int Param2)))))
	(0): (maximum (scanl * Param0))
	(1): (maximum (scanl * Param1))
	(2): (maximum (scanr * Param0))
	(3): (maximum (scanr * Param1))
	(4): (minimum (scanl * Param0))
	(5): (minimum (scanl * Param1))
	(6): (minimum (scanr * Param0))
	(7): (minimum (scanr * Param1))
	(8): (msp Param0)
	(9): (msp Param1)
Lifting (maximum (scanl * Param0)) for tree
	(0): (head (scanr * Param0))
	(1): (minimum (scanl * Param0))

Academic license - for non-commercial use only - expires 2021-08-22
Merging for (maximum (scanl * Param0)) in Task tree
(ite (and (< Param4 (* Param0 Param3)) (<= Param3 0)) (* (int Param0) (int Param3)) (ite (and (<= Param0 (* Param4 Param5)) (<= Param4 Param0)) (* (int Param4) (int Param5)) (int Param4)))
	(0): (head (scanr * Param0))
	(1): (head (scanr * Param1))
	(2): (minimum (scanl * Param0))
	(3): (minimum (scanl * Param1))
	(4): (maximum (scanl * Param0))
	(5): (maximum (scanl * Param1))
Lifting (maximum (scanr * Param0)) for tree
	(0): (head (scanr * Param0))
	(1): (minimum (scanr * Param0))

Academic license - for non-commercial use only - expires 2021-08-22
Merging for (maximum (scanr * Param0)) in Task tree
(ite (and (< Param1 0) (<= Param5 (* Param2 Param3))) (* (int Param2) (int Param3)) (ite (<= Param5 (* Param1 Param4)) (* (int Param1) (int Param4)) (int Param5)))
	(0): (head (scanr * Param0))
	(1): (head (scanr * Param1))
	(2): (minimum (scanr * Param0))
	(3): (minimum (scanr * Param1))
	(4): (maximum (scanr * Param0))
	(5): (maximum (scanr * Param1))
Lifting (minimum (scanl * Param0)) for tree
	(0): (head (scanr * Param0))
	(1): (maximum (scanl * Param0))

Academic license - for non-commercial use only - expires 2021-08-22
Merging for (minimum (scanl * Param0)) in Task tree
(ite (and (<= (* Param2 Param5) Param4) (<= 1 Param0)) (* (int Param2) (int Param5)) (ite (and (<= Param0 Param4) (<= (* Param3 Param4) Param0)) (* (int Param3) (int Param4)) (int Param4)))
	(0): (head (scanr * Param0))
	(1): (head (scanr * Param1))
	(2): (maximum (scanl * Param0))
	(3): (maximum (scanl * Param1))
	(4): (minimum (scanl * Param0))
	(5): (minimum (scanl * Param1))
Lifting (minimum (scanr * Param0)) for tree
	(0): (head (scanr * Param0))
	(1): (maximum (scanr * Param0))

Academic license - for non-commercial use only - expires 2021-08-22
Merging for (minimum (scanr * Param0)) in Task tree
(ite (and (<= (* Param1 Param4) Param5) (<= 1 Param1)) (* (int Param1) (int Param4)) (ite (and (<= (* Param2 Param5) Param1) (<= Param1 Param5)) (* (int Param2) (int Param5)) (int Param5)))
	(0): (head (scanr * Param0))
	(1): (head (scanr * Param1))
	(2): (maximum (scanr * Param0))
	(3): (maximum (scanr * Param1))
	(4): (minimum (scanr * Param0))
	(5): (minimum (scanr * Param1))
Lifting (head (scanr * Param0)) for tree

Academic license - for non-commercial use only - expires 2021-08-22
Merging for (head (scanr * Param0)) in Task tree
(* (int Param0) (int Param1))
	(0): (head (scanr * Param0))
	(1): (head (scanr * Param1))
Success
x0: (msp Param0)
Liftings:
  x1: (maximum (scanl * Param0))
  x2: (maximum (scanr * Param0))
  x3: (minimum (scanl * Param0))
  x4: (minimum (scanr * Param0))
  x5: (head (scanr * Param0))
Combinator for tree
  x0: ite (r1*l2<=r0&&r3*l4<=r0&&l0<r0) (r0) (ite (r1*l2<=l0&&r3*l4<l0) (l0) (ite (r1*l2<=r3*l4) (r3*l4) (r1*l2)))
  x1: ite (l1<l5*r3&&r3<=0) (l5*r3) (ite (l5<=l1*r1&&l1<=l5) (l1*r1) (l1))
  x2: ite (r5<0&&r2<=l4*r4) (l4*r4) (ite (r2<=r5*l2) (r5*l2) (r2))
  x3: ite (l1*r3<=l3&&1<=l5) (l1*r3) (ite (l5<=l3&&r1*l3<=l5) (r1*l3) (l3))
  x4: ite (r5*l4<=r4&&1<=r5) (r5*l4) (ite (l2*r4<=r5&&r5<=r4) (l2*r4) (r4))
  x5: l5*r5
|               |   external |    lifting |   #lifting |      #turn |
|            msp|    50.5548 |    28.2337 |          6 |        685 |
Total time cost: 78.7884
